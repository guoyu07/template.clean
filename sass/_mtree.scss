// ul.mtree : root <ul> list element.
// li.mtree-node : All <li> list items with children.
// li.mtree-open : <li> list items that are open
// li.mtree-closed : <li> list items that are closed
// ul.mtree-level-1 : Style <ul> list elements at different levels (depth)
// li.mtree-active : Class for last active <li> list item (experimental)

// All classes listed, with sensible defaults applied
ul.mtree {
  opacity: 0; // Set to 0 and let mtree display after initialization
  margin-left: 0; // Lets just remove default left margin on root element shall we ...
  padding: 0; // Set a nice padding if your design requires it

  // Styles for all <ul> submenu list elements except ul.mtree root.
  ul { margin-left: 1em; } // Set default indent level (or set 0)
  li { list-style: none; } // Lets remove default bullets for all elements

  // Styles for all link elements, change to '* >:first-child' if not using anchor <a>
  a {
    @extend %mtree-transition;
    display: block;
  }

  // li.mtree-open : <li> list items that are open
  li.mtree-open {}

  // li.mtree-closed : <li> list items that are closed
  li.mtree-closed {}

  // Level classes <ul> submenu elements with recursive styles.
  ul.mtree-level-1 {
    // smaller font-size for child elements from level 1
    // li { font-size: .9em; }
  }
  ul.mtree-level-2 { }
  ul.mtree-level-3 { }
  //ul.mtree-level-[DEPTH] { }

  // [EXPERIMENTAL] Class for last active <li> list item.
  li.mtree-active {
    // > a { background: #CCC; }
  }
}

// Some simple anim for hover, better add with Bourbon or Compass perhaps
%mtree-transition {
  -webkit-transition: all 300ms ease-out;
  -moz-transition: all 300ms ease-out;
  -ms-transition: all 300ms ease-out;
  -o-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

// bubba skin
ul.mtree {
  li.heading {
    color: #999;
    font-weight: bold;
    padding: 2em 1.2em 0;
    font-size: 0.9em;
    border-bottom: 1px solid #e0e0e0;
  }
  ul {margin-left:0;}
  ul li { font-size: .9em; }
  li.mtree-node > a:after {content: 'â€º'; margin-left:.5em; font-weight: normal; }
//  li.mtree-node > a { font-weight: bold; }
//  > li {border-bottom: 1px solid #DDD;}
  > li:last-child {border-bottom: none;}
  li:last-child > a {border: none; }
  > li.mtree-open > a { background: #DDD; }
  li > a:hover { background: #DDD;}
  li.mtree-active > a { background: #FFC000; color: #FFF; }
  $indent: 1em;
  a {
    padding: 7px 0px 7px $indent;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  li li > a { padding-left: $indent*2; }
  li li li > a { padding-left: $indent*3; }
  li li li li > a { padding-left: $indent*4; }
  li li li li li > a { padding-left: $indent*5; }
}

// jet skin
/*
ul.mtree.jet {
  ul { margin-left: 0; }
  li { margin-bottom: 1px; }
  li:last-child { margin-bottom: 0px; }
  li:first-child { margin-top: 1px; }
  li.mtree-active a { background: #E3E3E3; }
  li.mtree-active li:last-child > a {border-radius: 0px 0px 3px 3px;}
  li.mtree-active > a { background: #008cba; color:#FFF; border-radius: 3px 3px 0px 0px;}
  li > a:hover { background: #FFC000; color: #FFF;}
  $indent: 1em;
  a { padding: 5px 0px 5px $indent; }
  li li > a { padding-left: $indent*2; }
  li li li > a { padding-left: $indent*3; }
  li li li li > a { padding-left: $indent*4; }
  li li li li li > a { padding-left: $indent*5; }
}
*/
